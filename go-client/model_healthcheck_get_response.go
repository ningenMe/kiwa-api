/*
kiwa-api

api created by ningenme

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HealthcheckGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HealthcheckGetResponse{}

// HealthcheckGetResponse struct for HealthcheckGetResponse
type HealthcheckGetResponse struct {
	Message string `json:"message"`
}

// NewHealthcheckGetResponse instantiates a new HealthcheckGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthcheckGetResponse(message string) *HealthcheckGetResponse {
	this := HealthcheckGetResponse{}
	this.Message = message
	return &this
}

// NewHealthcheckGetResponseWithDefaults instantiates a new HealthcheckGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthcheckGetResponseWithDefaults() *HealthcheckGetResponse {
	this := HealthcheckGetResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *HealthcheckGetResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *HealthcheckGetResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *HealthcheckGetResponse) SetMessage(v string) {
	o.Message = v
}

func (o HealthcheckGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HealthcheckGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableHealthcheckGetResponse struct {
	value *HealthcheckGetResponse
	isSet bool
}

func (v NullableHealthcheckGetResponse) Get() *HealthcheckGetResponse {
	return v.value
}

func (v *NullableHealthcheckGetResponse) Set(val *HealthcheckGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthcheckGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthcheckGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthcheckGetResponse(val *HealthcheckGetResponse) *NullableHealthcheckGetResponse {
	return &NullableHealthcheckGetResponse{value: val, isSet: true}
}

func (v NullableHealthcheckGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthcheckGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



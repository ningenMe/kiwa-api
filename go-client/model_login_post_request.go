/*
kiwa-api

api created by ningenme

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LoginPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginPostRequest{}

// LoginPostRequest struct for LoginPostRequest
type LoginPostRequest struct {
	UserId string `json:"userId"`
	Password string `json:"password"`
}

// NewLoginPostRequest instantiates a new LoginPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginPostRequest(userId string, password string) *LoginPostRequest {
	this := LoginPostRequest{}
	this.UserId = userId
	this.Password = password
	return &this
}

// NewLoginPostRequestWithDefaults instantiates a new LoginPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginPostRequestWithDefaults() *LoginPostRequest {
	this := LoginPostRequest{}
	return &this
}

// GetUserId returns the UserId field value
func (o *LoginPostRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *LoginPostRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *LoginPostRequest) SetUserId(v string) {
	o.UserId = v
}

// GetPassword returns the Password field value
func (o *LoginPostRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *LoginPostRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *LoginPostRequest) SetPassword(v string) {
	o.Password = v
}

func (o LoginPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["password"] = o.Password
	return toSerialize, nil
}

type NullableLoginPostRequest struct {
	value *LoginPostRequest
	isSet bool
}

func (v NullableLoginPostRequest) Get() *LoginPostRequest {
	return v.value
}

func (v *NullableLoginPostRequest) Set(val *LoginPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginPostRequest(val *LoginPostRequest) *NullableLoginPostRequest {
	return &NullableLoginPostRequest{value: val, isSet: true}
}

func (v NullableLoginPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


